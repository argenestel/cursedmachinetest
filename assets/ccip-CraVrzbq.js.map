{"version":3,"file":"ccip-CraVrzbq.js","sources":["../../../../node_modules/.pnpm/viem@2.9.20_typescript@5.4.5_zod@3.23.5/node_modules/viem/_esm/constants/solidity.js","../../../../node_modules/.pnpm/viem@2.9.20_typescript@5.4.5_zod@3.23.5/node_modules/viem/_esm/utils/abi/decodeErrorResult.js","../../../../node_modules/.pnpm/viem@2.9.20_typescript@5.4.5_zod@3.23.5/node_modules/viem/_esm/utils/stringify.js","../../../../node_modules/.pnpm/viem@2.9.20_typescript@5.4.5_zod@3.23.5/node_modules/viem/_esm/errors/request.js","../../../../node_modules/.pnpm/viem@2.9.20_typescript@5.4.5_zod@3.23.5/node_modules/viem/_esm/errors/ccip.js","../../../../node_modules/.pnpm/viem@2.9.20_typescript@5.4.5_zod@3.23.5/node_modules/viem/_esm/utils/address/isAddressEqual.js","../../../../node_modules/.pnpm/viem@2.9.20_typescript@5.4.5_zod@3.23.5/node_modules/viem/_esm/utils/ccip.js"],"sourcesContent":["// https://docs.soliditylang.org/en/v0.8.16/control-structures.html#panic-via-assert-and-error-via-require\nexport const panicReasons = {\n    1: 'An `assert` condition failed.',\n    17: 'Arithmetic operation resulted in underflow or overflow.',\n    18: 'Division or modulo by zero (e.g. `5 / 0` or `23 % 0`).',\n    33: 'Attempted to convert to an invalid type.',\n    34: 'Attempted to access a storage byte array that is incorrectly encoded.',\n    49: 'Performed `.pop()` on an empty array',\n    50: 'Array index is out of bounds.',\n    65: 'Allocated too much memory or created an array which is too large.',\n    81: 'Attempted to call a zero-initialized variable of internal function type.',\n};\nexport const solidityError = {\n    inputs: [\n        {\n            name: 'message',\n            type: 'string',\n        },\n    ],\n    name: 'Error',\n    type: 'error',\n};\nexport const solidityPanic = {\n    inputs: [\n        {\n            name: 'reason',\n            type: 'uint256',\n        },\n    ],\n    name: 'Panic',\n    type: 'error',\n};\n//# sourceMappingURL=solidity.js.map","import { solidityError, solidityPanic } from '../../constants/solidity.js';\nimport { AbiDecodingZeroDataError, AbiErrorSignatureNotFoundError, } from '../../errors/abi.js';\nimport { slice } from '../data/slice.js';\nimport { toFunctionSelector, } from '../hash/toFunctionSelector.js';\nimport { decodeAbiParameters, } from './decodeAbiParameters.js';\nimport { formatAbiItem } from './formatAbiItem.js';\nexport function decodeErrorResult(parameters) {\n    const { abi, data } = parameters;\n    const signature = slice(data, 0, 4);\n    if (signature === '0x')\n        throw new AbiDecodingZeroDataError();\n    const abi_ = [...(abi || []), solidityError, solidityPanic];\n    const abiItem = abi_.find((x) => x.type === 'error' && signature === toFunctionSelector(formatAbiItem(x)));\n    if (!abiItem)\n        throw new AbiErrorSignatureNotFoundError(signature, {\n            docsPath: '/docs/contract/decodeErrorResult',\n        });\n    return {\n        abiItem,\n        args: 'inputs' in abiItem && abiItem.inputs && abiItem.inputs.length > 0\n            ? decodeAbiParameters(abiItem.inputs, slice(data, 4))\n            : undefined,\n        errorName: abiItem.name,\n    };\n}\n//# sourceMappingURL=decodeErrorResult.js.map","export const stringify = (value, replacer, space) => JSON.stringify(value, (key, value_) => {\n    const value = typeof value_ === 'bigint' ? value_.toString() : value_;\n    return typeof replacer === 'function' ? replacer(key, value) : value;\n}, space);\n//# sourceMappingURL=stringify.js.map","import { stringify } from '../utils/stringify.js';\nimport { BaseError } from './base.js';\nimport { getUrl } from './utils.js';\nexport class HttpRequestError extends BaseError {\n    constructor({ body, details, headers, status, url, }) {\n        super('HTTP request failed.', {\n            details,\n            metaMessages: [\n                status && `Status: ${status}`,\n                `URL: ${getUrl(url)}`,\n                body && `Request body: ${stringify(body)}`,\n            ].filter(Boolean),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'HttpRequestError'\n        });\n        Object.defineProperty(this, \"body\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"url\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.body = body;\n        this.headers = headers;\n        this.status = status;\n        this.url = url;\n    }\n}\nexport class WebSocketRequestError extends BaseError {\n    constructor({ body, details, url, }) {\n        super('WebSocket request failed.', {\n            details,\n            metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WebSocketRequestError'\n        });\n    }\n}\nexport class RpcRequestError extends BaseError {\n    constructor({ body, error, url, }) {\n        super('RPC Request failed.', {\n            cause: error,\n            details: error.message,\n            metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'RpcRequestError'\n        });\n        Object.defineProperty(this, \"code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.code = error.code;\n    }\n}\nexport class TimeoutError extends BaseError {\n    constructor({ body, url, }) {\n        super('The request took too long to respond.', {\n            details: 'The request timed out.',\n            metaMessages: [`URL: ${getUrl(url)}`, `Request body: ${stringify(body)}`],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'TimeoutError'\n        });\n    }\n}\n//# sourceMappingURL=request.js.map","import { stringify } from '../utils/stringify.js';\nimport { BaseError } from './base.js';\nimport { getUrl } from './utils.js';\nexport class OffchainLookupError extends BaseError {\n    constructor({ callbackSelector, cause, data, extraData, sender, urls, }) {\n        super(cause.shortMessage ||\n            'An error occurred while fetching for an offchain result.', {\n            cause,\n            metaMessages: [\n                ...(cause.metaMessages || []),\n                cause.metaMessages?.length ? '' : [],\n                'Offchain Gateway Call:',\n                urls && [\n                    '  Gateway URL(s):',\n                    ...urls.map((url) => `    ${getUrl(url)}`),\n                ],\n                `  Sender: ${sender}`,\n                `  Data: ${data}`,\n                `  Callback selector: ${callbackSelector}`,\n                `  Extra data: ${extraData}`,\n            ].flat(),\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'OffchainLookupError'\n        });\n    }\n}\nexport class OffchainLookupResponseMalformedError extends BaseError {\n    constructor({ result, url }) {\n        super('Offchain gateway response is malformed. Response data must be a hex value.', {\n            metaMessages: [\n                `Gateway URL: ${getUrl(url)}`,\n                `Response: ${stringify(result)}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'OffchainLookupResponseMalformedError'\n        });\n    }\n}\nexport class OffchainLookupSenderMismatchError extends BaseError {\n    constructor({ sender, to }) {\n        super('Reverted sender address does not match target contract address (`to`).', {\n            metaMessages: [\n                `Contract address: ${to}`,\n                `OffchainLookup sender address: ${sender}`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'OffchainLookupSenderMismatchError'\n        });\n    }\n}\n//# sourceMappingURL=ccip.js.map","import { InvalidAddressError, } from '../../errors/address.js';\nimport { isAddress } from './isAddress.js';\nexport function isAddressEqual(a, b) {\n    if (!isAddress(a, { strict: false }))\n        throw new InvalidAddressError({ address: a });\n    if (!isAddress(b, { strict: false }))\n        throw new InvalidAddressError({ address: b });\n    return a.toLowerCase() === b.toLowerCase();\n}\n//# sourceMappingURL=isAddressEqual.js.map","import { call } from '../actions/public/call.js';\nimport {} from '../errors/base.js';\nimport { OffchainLookupError, OffchainLookupResponseMalformedError, OffchainLookupSenderMismatchError, } from '../errors/ccip.js';\nimport { HttpRequestError } from '../errors/request.js';\nimport { decodeErrorResult } from './abi/decodeErrorResult.js';\nimport { encodeAbiParameters } from './abi/encodeAbiParameters.js';\nimport { isAddressEqual } from './address/isAddressEqual.js';\nimport { concat } from './data/concat.js';\nimport { isHex } from './data/isHex.js';\nimport { stringify } from './stringify.js';\nexport const offchainLookupSignature = '0x556f1830';\nexport const offchainLookupAbiItem = {\n    name: 'OffchainLookup',\n    type: 'error',\n    inputs: [\n        {\n            name: 'sender',\n            type: 'address',\n        },\n        {\n            name: 'urls',\n            type: 'string[]',\n        },\n        {\n            name: 'callData',\n            type: 'bytes',\n        },\n        {\n            name: 'callbackFunction',\n            type: 'bytes4',\n        },\n        {\n            name: 'extraData',\n            type: 'bytes',\n        },\n    ],\n};\nexport async function offchainLookup(client, { blockNumber, blockTag, data, to, }) {\n    const { args } = decodeErrorResult({\n        data,\n        abi: [offchainLookupAbiItem],\n    });\n    const [sender, urls, callData, callbackSelector, extraData] = args;\n    const { ccipRead } = client;\n    const ccipRequest_ = ccipRead && typeof ccipRead?.request === 'function'\n        ? ccipRead.request\n        : ccipRequest;\n    try {\n        if (!isAddressEqual(to, sender))\n            throw new OffchainLookupSenderMismatchError({ sender, to });\n        const result = await ccipRequest_({ data: callData, sender, urls });\n        const { data: data_ } = await call(client, {\n            blockNumber,\n            blockTag,\n            data: concat([\n                callbackSelector,\n                encodeAbiParameters([{ type: 'bytes' }, { type: 'bytes' }], [result, extraData]),\n            ]),\n            to,\n        });\n        return data_;\n    }\n    catch (err) {\n        throw new OffchainLookupError({\n            callbackSelector,\n            cause: err,\n            data,\n            extraData,\n            sender,\n            urls,\n        });\n    }\n}\nexport async function ccipRequest({ data, sender, urls, }) {\n    let error = new Error('An unknown error occurred.');\n    for (let i = 0; i < urls.length; i++) {\n        const url = urls[i];\n        const method = url.includes('{data}') ? 'GET' : 'POST';\n        const body = method === 'POST' ? { data, sender } : undefined;\n        try {\n            const response = await fetch(url.replace('{sender}', sender).replace('{data}', data), {\n                body: JSON.stringify(body),\n                method,\n            });\n            let result;\n            if (response.headers.get('Content-Type')?.startsWith('application/json')) {\n                result = (await response.json()).data;\n            }\n            else {\n                result = (await response.text());\n            }\n            if (!response.ok) {\n                error = new HttpRequestError({\n                    body,\n                    details: result?.error\n                        ? stringify(result.error)\n                        : response.statusText,\n                    headers: response.headers,\n                    status: response.status,\n                    url,\n                });\n                continue;\n            }\n            if (!isHex(result)) {\n                error = new OffchainLookupResponseMalformedError({\n                    result,\n                    url,\n                });\n                continue;\n            }\n            return result;\n        }\n        catch (err) {\n            error = new HttpRequestError({\n                body,\n                details: err.message,\n                url,\n            });\n        }\n    }\n    throw error;\n}\n//# sourceMappingURL=ccip.js.map"],"names":["solidityError","solidityPanic","decodeErrorResult","parameters","abi","data","signature","slice","AbiDecodingZeroDataError","abiItem","x","toFunctionSelector","formatAbiItem","AbiErrorSignatureNotFoundError","decodeAbiParameters","stringify","value","replacer","space","key","value_","HttpRequestError","BaseError","body","details","headers","status","url","getUrl","OffchainLookupError","callbackSelector","cause","extraData","sender","urls","OffchainLookupResponseMalformedError","result","OffchainLookupSenderMismatchError","to","isAddressEqual","a","b","isAddress","InvalidAddressError","offchainLookupSignature","offchainLookupAbiItem","offchainLookup","client","blockNumber","blockTag","args","callData","ccipRead","ccipRequest_","ccipRequest","data_","call","concat","encodeAbiParameters","err","error","i","method","response","isHex"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}